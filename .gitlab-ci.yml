stages:
  - test
  - build
  - deploy

before_script:
  # check git installation
  - which git || (apt-get update -qq && apt-get install --no-install-recommends -qqqy git)

  # Configure git to use Gitlab deploy keys instead of ssh/html
  # These must be created  and added as: https://docs.gitlab.com/ee/user/project/deploy_keys/index.html
  - git config --global url."https://$DEPLOY_NAME:$DEPLOY_KEY@gitlab.com/".insteadOf "git@gitlab.com:"
  - git config --global url."https://$DEPLOY_NAME:$DEPLOY_KEY@gitlab.com/".insteadOf "https://gitlab.com/" --add

.unittests:
  script:
    - |
      julia --project=@. -e '
        using Pkg
        Pkg.add("Coverage")
        Pkg.Registry.add(Pkg.RegistrySpec(url="git@gitlab.com:testingcis/TestRegister.git"))
        Pkg.build()
        Pkg.test(coverage = true)'

.coverage:
  coverage: /Test coverage (\d+\.\d+%)/
  after_script:
    - |
      julia -e '
        using Pkg
        Pkg.add("Coverage")
        using Coverage
        c, t = get_summary(process_folder())
        using Printf
        @printf "Test coverage %.2f%%\n" 100c / t'

# -------------------------
# Tests
# -------------------------
# Perform all the tests

"UnitTests:v1.7":
  stage: test
  image: julia:1.7
  extends:
    - .unittests
    - .coverage

"UnitTests:v1.8":
  stage: test
  image: julia:1.8
  extends:
    - .unittests
    - .coverage

# -------------------------
# Documentation
# -------------------------
# Build the documentation for the package

"Documentation":
  image: julia:1.7
  stage: build

  artifacts:
    paths:
      - documentation
    expire_in: 1 h

  script:
    # Install Documenter
    # Other dependecies may be already installed in a project
    # within the 'docs/' folder
    - julia --project=docs/ -e 'using Pkg; Pkg.add("Documenter");'
    # Install the current package as 'dev'
    - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
    # Build the documentation
    - julia --project=docs/ docs/make.jl

    - mkdir -p documentation
    - mv docs/build/* documentation/

  only:
    - master
    - tags

# Deploy the documentation
pages:
  stage: deploy

  dependencies:
    - Documentation

  script:
    - mkdir -p public/latest
    - mv -v documentation/* public/latest/

  artifacts:
    paths:
      - public

  only:
    - master
    - tags
